output "lambda_iam_role_arn" {
  description = "The ARN of the IAM role used by Lambda function"
  value       = aws_iam_role.lambda.arn
}

output "lambda_iam_role_name" {
  description = "The name of the IAM role used by Lambda function"
  value       = aws_iam_role.lambda.name
}

output "lambda_function_arn" {
  description = "The ARN of the Lambda function"
  value       = aws_lambda_function.start_stop_scheduler.arn
}

output "lambda_function_name" {
  description = "The name of the Lambda function"
  value       = aws_lambda_function.start_stop_scheduler.function_name
}

output "lambda_function_invoke_arn" {
  description = "The ARN to be used for invoking Lambda function from API Gateway"
  value       = aws_lambda_function.start_stop_scheduler.function_name
}

output "lambda_function_last_modified" {
  description = "The date Lambda function was last modified"
  value       = aws_lambda_function.start_stop_scheduler.last_modified
}

output "lambda_function_version" {
  description = "Latest published version of your Lambda function"
  value       = aws_lambda_function.start_stop_scheduler.version
}

output "lambda_function_log_group_name" {
  description = "The name of the lambda's log group"
  value       = aws_cloudwatch_log_group.start_stop_scheduler.name
}

output "lambda_function_log_group_arn" {
  description = "The ARN of the lambda's log group"
  value       = aws_cloudwatch_log_group.start_stop_scheduler.arn
}

output "clouwatch_event_rules" {
  description = "Cloudwatch event rules generated by the module to trigger the lambda"
  value = concat(
    [for r in aws_cloudwatch_event_rule.start : { arn = r.arn, description = r.description }],
    [for r in aws_cloudwatch_event_rule.stop : { arn = r.arn, description = r.description }]
  )
}
